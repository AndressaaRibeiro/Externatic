{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import Plugin from '@swup/plugin';\nimport { Location, getCurrentUrl } from 'swup';\n\nexport default class FormPlugin extends Plugin {\n\tname = 'FormsPlugin';\n\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tconst defaultOptions = {\n\t\t\tformSelector: 'form[data-swup-form]'\n\t\t};\n\n\t\tthis.options = {\n\t\t\t...defaultOptions,\n\t\t\t...options\n\t\t};\n\n\t\t/**\n\t\t * Helps detecting form submits to a new tab\n\t\t */\n\t\tthis.specialKeys = {\n\t\t\tMeta: false,\n\t\t\tControl: false,\n\t\t\tShift: false\n\t\t};\n\t}\n\n\tmount() {\n\t\tconst swup = this.swup;\n\n\t\t// add empty handlers array for submitForm event\n\t\tswup._handlers.submitForm = [];\n\t\tswup._handlers.openFormSubmitInNewTab = [];\n\n\t\t// Register the submit handler. Using `capture:true` to be\n\t\t// able to set the form's target attribute on the fly.\n\t\tswup.delegatedListeners.formSubmit = swup.delegateEvent(\n\t\t\tthis.options.formSelector,\n\t\t\t'submit',\n\t\t\tthis.beforeFormSubmit.bind(this),\n\t\t\t{\n\t\t\t\tcapture: true\n\t\t\t}\n\t\t);\n\n\t\tdocument.addEventListener('keydown', this.onKeyDown);\n\t\tdocument.addEventListener('keyup', this.onKeyUp);\n\t}\n\n\tunmount() {\n\t\tconst swup = this.swup;\n\n\t\tswup.delegatedListeners.formSubmit.destroy();\n\n\t\tdocument.removeEventListener('keydown', this.onKeyDown);\n\t\tdocument.removeEventListener('keyup', this.onKeyUp);\n\t}\n\n\t/**\n\t * Handles form 'submit' events during the capture phase\n\t * @param {SubmitEvent} event\n\t * @returns {void}\n\t */\n\tbeforeFormSubmit(event) {\n\t\tconst swup = this.swup;\n\n\t\t/**\n\t\t * Always trigger the submitForm event,\n\t\t * allowing it to be `defaultPrevented`\n\t\t */\n\t\tswup.triggerEvent('submitForm', event);\n\n\t\tconst form = event.target;\n\n\t\t/**\n\t\t * Open the form in a new tab if either Command (Mac), Control (Windows) or Shift is pressed.\n\t\t * Normalizes behavior across browsers.\n\t\t */\n\t\tif (this.isSpecialKeyPressed()) {\n\t\t\tthis.resetSpecialKeys();\n\n\t\t\tswup.triggerEvent('openFormSubmitInNewTab', event);\n\n\t\t\tconst previousFormTarget = form.getAttribute('target');\n\n\t\t\tform.setAttribute('target', '_blank');\n\n\t\t\tform.addEventListener(\n\t\t\t\t'submit',\n\t\t\t\t(event) => {\n\t\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\t\tthis.restorePreviousFormTarget(event.target, previousFormTarget);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t{ once: true }\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.submitForm(event);\n\t}\n\n\t/**\n\t * Restores the previous form target if available\n\t * @param {HTMLFormElement} form\n\t * @returns {void}\n\t */\n\trestorePreviousFormTarget(form, previousTarget) {\n\t\tif (previousTarget) {\n\t\t\tform.setAttribute('target', previousTarget);\n\t\t} else {\n\t\t\tform.removeAttribute('target');\n\t\t}\n\t}\n\n\t/**\n\t * Submits a form through swup\n\t * @param {SubmitEvent} event\n\t * @returns {void}\n\t */\n\tsubmitForm(event) {\n\t\tconst swup = this.swup;\n\n\t\tevent.preventDefault();\n\n\t\tconst form = event.target;\n\t\tconst data = new FormData(form);\n\t\tconst action = form.getAttribute('action') || getCurrentUrl();\n\t\tconst method = (form.getAttribute('method') || 'get').toUpperCase();\n\t\tconst customTransition = form.getAttribute('data-swup-transition');\n\n\t\tlet { url, hash } = Location.fromUrl(action);\n\n\t\tif (hash) {\n\t\t\tswup.scrollToElement = hash;\n\t\t}\n\n\t\tif (method === 'GET') {\n\t\t\turl = this.appendQueryParams(url, data);\n\t\t\tswup.cache.remove(url);\n\t\t\tswup.loadPage({ url, customTransition });\n\t\t} else {\n\t\t\tswup.cache.remove(url);\n\t\t\tswup.loadPage({ url, method, data, customTransition });\n\t\t}\n\t}\n\n\t/**\n\t * Appends query parameters to a URL\n\t * @param {string} url\n\t * @param {FormData} formData\n\t * @returns {string}\n\t */\n\tappendQueryParams(url, formData) {\n\t\turl = url.split('?')[0];\n\t\tconst query = new URLSearchParams(formData).toString();\n\t\treturn query ? `${url}?${query}` : url;\n\t}\n\n\t/**\n\t * Is either command or control key down at the moment\n\t * @returns {boolean}\n\t */\n\tisSpecialKeyPressed() {\n\t\treturn Object.values(this.specialKeys).some((value) => value);\n\t}\n\n\t/**\n\t * Reset all entries in `specialKeys` to false\n\t */\n\tresetSpecialKeys() {\n\t\tfor (const [key, value] of Object.entries(this.specialKeys)) {\n\t\t\tthis.specialKeys[key] = false;\n\t\t}\n\t}\n\n\t/**\n\t * Adjust `specialKeys` on keyDown\n\t * @param {KeyboardEvent} e\n\t * @returns {void}\n\t */\n\tonKeyDown = (e) => {\n\t\tif (!this.specialKeys.hasOwnProperty(e.key)) return;\n\t\tthis.specialKeys[e.key] = true;\n\t};\n\n\t/**\n\t * Adjust `specialKeys` on keyUp\n\t * @param {KeyboardEvent} e\n\t * @returns {void}\n\t */\n\tonKeyUp = (e) => {\n\t\tif (!this.specialKeys.hasOwnProperty(e.key)) return;\n\t\tthis.specialKeys[e.key] = false;\n\t};\n}\n"],"names":["FormPlugin","constructor","options","super","this","name","onKeyDown","e","specialKeys","hasOwnProperty","key","onKeyUp","defaultOptions","formSelector","Meta","Control","Shift","mount","swup","_handlers","submitForm","openFormSubmitInNewTab","delegatedListeners","formSubmit","delegateEvent","beforeFormSubmit","bind","capture","document","addEventListener","unmount","destroy","removeEventListener","event","triggerEvent","target","isSpecialKeyPressed","resetSpecialKeys","previousFormTarget","form","getAttribute","setAttribute","requestAnimationFrame","restorePreviousFormTarget","once","previousTarget","removeAttribute","preventDefault","data","action","getCurrentUrl","method","toUpperCase","url","hash","Location","fromUrl","scrollToElement","appendQueryParams","cache","remove","loadPage","customTransition","formData","split","URLSearchParams","toString","query","Object","values","some","value","entries"],"mappings":"mTAGe,MAAgBA,YAG9BC,YAAYC,GACXC,QAAQC,KAHTC,KAAO,cAAaD,KAmLpBE,UAAaC,IACPH,KAAKI,YAAYC,eAAeF,EAAEG,OACvCN,KAAKI,YAAYD,EAAEG,MAAO,EAC3B,OAOAC,QAAWJ,IACLH,KAAKI,YAAYC,eAAeF,EAAEG,OACvCN,KAAKI,YAAYD,EAAEG,MAAO,IAtL1BN,KAAKF,QACDU,EAAAA,CAAAA,EALmB,CACtBC,aAAc,wBAKXX,GAMJE,KAAKI,YAAc,CAClBM,MAAM,EACNC,SAAS,EACTC,OAAO,EAET,CAEAC,QACC,MAAUC,EAAGd,KAAKc,KAGlBA,EAAKC,UAAUC,WAAa,GAC5BF,EAAKC,UAAUE,uBAAyB,GAIxCH,EAAKI,mBAAmBC,WAAaL,EAAKM,cACzCpB,KAAKF,QAAQW,aACb,SACAT,KAAKqB,iBAAiBC,KAAKtB,MAC3B,CACCuB,SAAS,IAIXC,SAASC,iBAAiB,UAAWzB,KAAKE,WAC1CsB,SAASC,iBAAiB,QAASzB,KAAKO,QACzC,CAEAmB,UACc1B,KAAKc,KAEbI,mBAAmBC,WAAWQ,UAEnCH,SAASI,oBAAoB,UAAW5B,KAAKE,WAC7CsB,SAASI,oBAAoB,QAAS5B,KAAKO,QAC5C,CAOAc,iBAAiBQ,GAChB,MAAMf,EAAOd,KAAKc,KAMlBA,EAAKgB,aAAa,aAAcD,GAEhC,QAAaA,EAAME,OAMnB,GAAI/B,KAAKgC,sBAAuB,CAC/BhC,KAAKiC,mBAELnB,EAAKgB,aAAa,yBAA0BD,GAE5C,MAAwBK,EAAGC,EAAKC,aAAa,UAc7C,OAZAD,EAAKE,aAAa,SAAU,eAE5BF,EAAKV,iBACJ,SACCI,IACAS,sBAAsB,KACrBtC,KAAKuC,0BAA0BV,EAAME,OAAQG,EAC9C,IAED,CAAEM,MAAM,GAIV,CAEAxC,KAAKgB,WAAWa,EACjB,CAOAU,0BAA0BJ,EAAMM,GAC3BA,EACHN,EAAKE,aAAa,SAAUI,GAE5BN,EAAKO,gBAAgB,SAEvB,CAOA1B,WAAWa,GACV,MAAUf,EAAGd,KAAKc,KAElBe,EAAMc,iBAEN,QAAad,EAAME,OACba,EAAO,aAAaT,GACdU,EAAGV,EAAKC,aAAa,WAAaU,IACxCC,GAAUZ,EAAKC,aAAa,WAAa,OAAOY,gBAC7Bb,EAAKC,aAAa,wBAE3C,IAAIa,IAAEA,EAAGC,KAAEA,GAASC,EAASC,QAAQP,GAEjCK,IACHpC,EAAKuC,gBAAkBH,GAGT,QAAXH,GACHE,EAAMjD,KAAKsD,kBAAkBL,EAAKL,GAClC9B,EAAKyC,MAAMC,OAAOP,GAClBnC,EAAK2C,SAAS,CAAER,MAAKS,uBAErB5C,EAAKyC,MAAMC,OAAOP,GAClBnC,EAAK2C,SAAS,CAAER,MAAKF,SAAQH,OAAMc,qBAErC,CAQAJ,kBAAkBL,EAAKU,GACtBV,EAAMA,EAAIW,MAAM,KAAK,GACrB,QAAc,IAAmBC,gBAACF,GAAUG,WAC5C,OAAOC,EAAS,GAAEd,KAAOc,IAAUd,CACpC,CAMAjB,sBACC,OAAagC,OAACC,OAAOjE,KAAKI,aAAa8D,KAAMC,GAAUA,EACxD,CAKAlC,mBACC,IAAK,MAAO3B,EAAK6D,KAAgBH,OAACI,QAAQpE,KAAKI,aAC9CJ,KAAKI,YAAYE,IAAO,CAE1B"}